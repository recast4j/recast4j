buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "org.hibernate.build:gradle-maven-publish-auth:3.0.4"
    }
}

plugins {
    id "net.researchgate.release" version "3.1.0"
    id "com.adarshr.test-logger" version "4.0.0"
    id "tech.yanand.maven-central-publish" version "1.3.0" apply false
}

subprojects {    

    group = "org.recast4j"

    repositories {
        mavenLocal()
        mavenCentral()
    }

    apply plugin: "java"
    apply plugin: "maven-publish"
    apply plugin: "signing"
    apply plugin: "com.adarshr.test-logger"

    if (!project.hasProperty("ci")) {
        apply plugin: "org.hibernate.build.maven-repo-auth"
    }

    if (it.name != "recast-demo") {
        apply plugin: "tech.yanand.maven-central-publish"
    } else {
        task publishToMavenCentralPortal() {
        }
    }

    dependencies {
        testImplementation (libs.junit5.api)
        testImplementation (libs.junit5.params)
        testImplementation (libs.assertj.core)
        testImplementation (libs.mockito)
        testRuntimeOnly (libs.junit5.engine)
        testRuntimeOnly (libs.junit5.launcher)
    }

    java {
        if (!project.hasProperty("ci")) {
            withSourcesJar()
            withJavadocJar()
        }
    }

    compileJava {
        options.encoding = "UTF-8"
        if (JavaVersion.current().isJava9Compatible()) {
            options.release = 11
        }
    }
    
    javadoc {
        options.encoding = "UTF-8"    
        options.addBooleanOption("Xdoclint:none", true)
        if (JavaVersion.current().isJava9Compatible()) {
            options.addBooleanOption("html5", true)
        }
    }
    
    test {
        useJUnitPlatform()
    }

    jar {
        manifest { attributes("Implementation-Version": archiveVersion) }
    }
    
    if (!project.hasProperty("ci") && it.name != "recast-demo") {

        publishing {
            publications {
                mavenJava(MavenPublication) {
                    from components.java
                    pom {
                        name = "Recast and Detour for Java"
                        description = "Navigation Mesh Construction and Path-finding Toolkit."
                        url = "http://recast4j.org"
                        licenses {
                            license {
                                name = "Zlib License"
                                url = "https://github.com/recast4j/recast4j/blob/master/License.txt"
                            }
                        }
                        developers {
                            developer {
                                id = "ppiastucki"
                                name = "Piotr Piastucki"
                                url = "https://github.com/ppiastucki"
                            }
                        }
                        scm {
                            connection = "scm:git:https://github.com/recast4j/recast4j.git"
                            developerConnection = "scm:git:ssh://git@github.com:recast4j/recast4j.git"
                            url = "https://github.com/recast4j/recast4j"
                        }
                    }                    
                }
            }
            
//            repositories {
//                maven {
//                    name = "ossrh"
//                    def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
//                    def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
//                    url = version.endsWith("SNAPSHOT") ? snapshotsRepoUrl : releasesRepoUrl
//                }
//            }
        }

        signing {
            sign publishing.publications.mavenJava
        }
        
        mavenCentral {
            authToken = mavenCentralToken
        }
    }

}

// https://github.com/researchgate/gradle-release/issues/144
//task build() {
//    dependsOn subprojects.build
//}

task publish() {
    dependsOn subprojects.publishToMavenCentralPortal
}

afterReleaseBuild.dependsOn publish
